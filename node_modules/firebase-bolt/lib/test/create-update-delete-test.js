"use strict";
/*
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var simulator_1 = require('../simulator');
var secrets = require('../../auth-secrets');
simulator_1.rulesSuite("Create, Update, and Delete", function (test) {
    test.database(secrets.APP, secrets.SECRET);
    test.rules('samples/create-update-delete');
    var uid = test.uid;
    test("Create", function (rules) {
        rules
            .at('/docs/' + uid('mike') + '/create')
            .write('created')
            .succeeds("Anyone can create.")
            .write('updated')
            .fails("No-one can update.")
            .write(null)
            .fails("No-one can delete.")
            .as('mike')
            .write('owner-updated')
            .fails("Owner can't update.")
            .write(null)
            .fails("Owner can't delete.");
    });
    test("Update", function (rules) {
        rules
            .at('/docs/' + uid('mike') + '/update')
            .as('mike')
            .write('created')
            .fails("Owner can't create.")
            .as('admin')
            .write('created')
            .succeeds("Admin can create.")
            .as('anon')
            .write('updated')
            .succeeds("Anyone can update.")
            .write(null)
            .fails("No-one can delete.")
            .as('mike')
            .write('owner-updated')
            .succeeds("Owner can update.")
            .write(null)
            .fails("Owner can't delete.");
    });
    test("Delete", function (rules) {
        rules
            .at('/docs/' + uid('mike') + '/delete')
            .as('admin')
            .write('created')
            .succeeds("Admin can create.")
            .as('anon')
            .write('updated')
            .fails("Anyone can't update.")
            .write(null)
            .succeeds("Anyone can delete.")
            .as('mike')
            .write('owner-created')
            .fails("Owner can't create.")
            .as('admin')
            .write('created')
            .as('mike')
            .write('owner-updated')
            .fails("Owner can't update.")
            .write(null)
            .succeeds("Owner can delete.");
    });
    test("Owner Create and Delete", function (rules) {
        rules
            .at('/docs/' + uid('mike') + '/owner-create-delete')
            .as('anon')
            .write('created')
            .fails("Anyone can't create.")
            .as('mike')
            .write('created')
            .succeeds("Owner can create.")
            .as('anon')
            .write('updated')
            .succeeds("Anyone can update.")
            .write(null)
            .fails("Anyone can't delete.")
            .as('mike')
            .write(null)
            .succeeds("Owner can delete.");
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvY3JlYXRlLXVwZGF0ZS1kZWxldGUtdGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCwwQkFBeUIsY0FBYyxDQUFDLENBQUE7QUFDeEMsSUFBSSxPQUFPLEdBQUcsT0FBTyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFFNUMsc0JBQVUsQ0FBQyw0QkFBNEIsRUFBRSxVQUFTLElBQUk7SUFDcEQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzQyxJQUFJLENBQUMsS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7SUFDM0MsSUFBSSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUVuQixJQUFJLENBQUMsUUFBUSxFQUFFLFVBQUMsS0FBSztRQUNuQixLQUFLO2FBQ0YsRUFBRSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDO2FBQ3RDLEtBQUssQ0FBQyxTQUFTLENBQUM7YUFDaEIsUUFBUSxDQUFDLG9CQUFvQixDQUFDO2FBRTlCLEtBQUssQ0FBQyxTQUFTLENBQUM7YUFDaEIsS0FBSyxDQUFDLG9CQUFvQixDQUFDO2FBRTNCLEtBQUssQ0FBQyxJQUFJLENBQUM7YUFDWCxLQUFLLENBQUMsb0JBQW9CLENBQUM7YUFFM0IsRUFBRSxDQUFDLE1BQU0sQ0FBQzthQUVWLEtBQUssQ0FBQyxlQUFlLENBQUM7YUFDdEIsS0FBSyxDQUFDLHFCQUFxQixDQUFDO2FBRTVCLEtBQUssQ0FBQyxJQUFJLENBQUM7YUFDWCxLQUFLLENBQUMscUJBQXFCLENBQUMsQ0FDOUI7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILElBQUksQ0FBQyxRQUFRLEVBQUUsVUFBQyxLQUFLO1FBQ25CLEtBQUs7YUFDRixFQUFFLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxTQUFTLENBQUM7YUFDdEMsRUFBRSxDQUFDLE1BQU0sQ0FBQzthQUNWLEtBQUssQ0FBQyxTQUFTLENBQUM7YUFDaEIsS0FBSyxDQUFDLHFCQUFxQixDQUFDO2FBRTVCLEVBQUUsQ0FBQyxPQUFPLENBQUM7YUFDWCxLQUFLLENBQUMsU0FBUyxDQUFDO2FBQ2hCLFFBQVEsQ0FBQyxtQkFBbUIsQ0FBQzthQUU3QixFQUFFLENBQUMsTUFBTSxDQUFDO2FBRVYsS0FBSyxDQUFDLFNBQVMsQ0FBQzthQUNoQixRQUFRLENBQUMsb0JBQW9CLENBQUM7YUFFOUIsS0FBSyxDQUFDLElBQUksQ0FBQzthQUNYLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQzthQUUzQixFQUFFLENBQUMsTUFBTSxDQUFDO2FBQ1YsS0FBSyxDQUFDLGVBQWUsQ0FBQzthQUN0QixRQUFRLENBQUMsbUJBQW1CLENBQUM7YUFFN0IsS0FBSyxDQUFDLElBQUksQ0FBQzthQUNYLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxDQUM5QjtJQUNILENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLFFBQVEsRUFBRSxVQUFDLEtBQUs7UUFDbkIsS0FBSzthQUNGLEVBQUUsQ0FBQyxRQUFRLEdBQUcsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLFNBQVMsQ0FBQzthQUN0QyxFQUFFLENBQUMsT0FBTyxDQUFDO2FBQ1gsS0FBSyxDQUFDLFNBQVMsQ0FBQzthQUNoQixRQUFRLENBQUMsbUJBQW1CLENBQUM7YUFFN0IsRUFBRSxDQUFDLE1BQU0sQ0FBQzthQUVWLEtBQUssQ0FBQyxTQUFTLENBQUM7YUFDaEIsS0FBSyxDQUFDLHNCQUFzQixDQUFDO2FBRTdCLEtBQUssQ0FBQyxJQUFJLENBQUM7YUFDWCxRQUFRLENBQUMsb0JBQW9CLENBQUM7YUFFOUIsRUFBRSxDQUFDLE1BQU0sQ0FBQzthQUNWLEtBQUssQ0FBQyxlQUFlLENBQUM7YUFDdEIsS0FBSyxDQUFDLHFCQUFxQixDQUFDO2FBRTVCLEVBQUUsQ0FBQyxPQUFPLENBQUM7YUFDWCxLQUFLLENBQUMsU0FBUyxDQUFDO2FBRWhCLEVBQUUsQ0FBQyxNQUFNLENBQUM7YUFFVixLQUFLLENBQUMsZUFBZSxDQUFDO2FBQ3RCLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQzthQUU1QixLQUFLLENBQUMsSUFBSSxDQUFDO2FBQ1gsUUFBUSxDQUFDLG1CQUFtQixDQUFDLENBQy9CO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLENBQUMseUJBQXlCLEVBQUUsVUFBQyxLQUFLO1FBQ3BDLEtBQUs7YUFDRixFQUFFLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxzQkFBc0IsQ0FBQzthQUNuRCxFQUFFLENBQUMsTUFBTSxDQUFDO2FBQ1YsS0FBSyxDQUFDLFNBQVMsQ0FBQzthQUNoQixLQUFLLENBQUMsc0JBQXNCLENBQUM7YUFFN0IsRUFBRSxDQUFDLE1BQU0sQ0FBQzthQUNWLEtBQUssQ0FBQyxTQUFTLENBQUM7YUFDaEIsUUFBUSxDQUFDLG1CQUFtQixDQUFDO2FBRTdCLEVBQUUsQ0FBQyxNQUFNLENBQUM7YUFFVixLQUFLLENBQUMsU0FBUyxDQUFDO2FBQ2hCLFFBQVEsQ0FBQyxvQkFBb0IsQ0FBQzthQUU5QixLQUFLLENBQUMsSUFBSSxDQUFDO2FBQ1gsS0FBSyxDQUFDLHNCQUFzQixDQUFDO2FBRTdCLEVBQUUsQ0FBQyxNQUFNLENBQUM7YUFDVixLQUFLLENBQUMsSUFBSSxDQUFDO2FBQ1gsUUFBUSxDQUFDLG1CQUFtQixDQUFDLENBQy9CO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2NyZWF0ZS11cGRhdGUtZGVsZXRlLXRlc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMTUgR29vZ2xlIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbmltcG9ydCB7cnVsZXNTdWl0ZX0gZnJvbSAnLi4vc2ltdWxhdG9yJztcbnZhciBzZWNyZXRzID0gcmVxdWlyZSgnLi4vLi4vYXV0aC1zZWNyZXRzJyk7XG5cbnJ1bGVzU3VpdGUoXCJDcmVhdGUsIFVwZGF0ZSwgYW5kIERlbGV0ZVwiLCBmdW5jdGlvbih0ZXN0KSB7XG4gIHRlc3QuZGF0YWJhc2Uoc2VjcmV0cy5BUFAsIHNlY3JldHMuU0VDUkVUKTtcbiAgdGVzdC5ydWxlcygnc2FtcGxlcy9jcmVhdGUtdXBkYXRlLWRlbGV0ZScpO1xuICB2YXIgdWlkID0gdGVzdC51aWQ7XG5cbiAgdGVzdChcIkNyZWF0ZVwiLCAocnVsZXMpID0+IHtcbiAgICBydWxlc1xuICAgICAgLmF0KCcvZG9jcy8nICsgdWlkKCdtaWtlJykgKyAnL2NyZWF0ZScpXG4gICAgICAud3JpdGUoJ2NyZWF0ZWQnKVxuICAgICAgLnN1Y2NlZWRzKFwiQW55b25lIGNhbiBjcmVhdGUuXCIpXG5cbiAgICAgIC53cml0ZSgndXBkYXRlZCcpXG4gICAgICAuZmFpbHMoXCJOby1vbmUgY2FuIHVwZGF0ZS5cIilcblxuICAgICAgLndyaXRlKG51bGwpXG4gICAgICAuZmFpbHMoXCJOby1vbmUgY2FuIGRlbGV0ZS5cIilcblxuICAgICAgLmFzKCdtaWtlJylcblxuICAgICAgLndyaXRlKCdvd25lci11cGRhdGVkJylcbiAgICAgIC5mYWlscyhcIk93bmVyIGNhbid0IHVwZGF0ZS5cIilcblxuICAgICAgLndyaXRlKG51bGwpXG4gICAgICAuZmFpbHMoXCJPd25lciBjYW4ndCBkZWxldGUuXCIpXG4gICAgO1xuICB9KTtcblxuICB0ZXN0KFwiVXBkYXRlXCIsIChydWxlcykgPT4ge1xuICAgIHJ1bGVzXG4gICAgICAuYXQoJy9kb2NzLycgKyB1aWQoJ21pa2UnKSArICcvdXBkYXRlJylcbiAgICAgIC5hcygnbWlrZScpXG4gICAgICAud3JpdGUoJ2NyZWF0ZWQnKVxuICAgICAgLmZhaWxzKFwiT3duZXIgY2FuJ3QgY3JlYXRlLlwiKVxuXG4gICAgICAuYXMoJ2FkbWluJylcbiAgICAgIC53cml0ZSgnY3JlYXRlZCcpXG4gICAgICAuc3VjY2VlZHMoXCJBZG1pbiBjYW4gY3JlYXRlLlwiKVxuXG4gICAgICAuYXMoJ2Fub24nKVxuXG4gICAgICAud3JpdGUoJ3VwZGF0ZWQnKVxuICAgICAgLnN1Y2NlZWRzKFwiQW55b25lIGNhbiB1cGRhdGUuXCIpXG5cbiAgICAgIC53cml0ZShudWxsKVxuICAgICAgLmZhaWxzKFwiTm8tb25lIGNhbiBkZWxldGUuXCIpXG5cbiAgICAgIC5hcygnbWlrZScpXG4gICAgICAud3JpdGUoJ293bmVyLXVwZGF0ZWQnKVxuICAgICAgLnN1Y2NlZWRzKFwiT3duZXIgY2FuIHVwZGF0ZS5cIilcblxuICAgICAgLndyaXRlKG51bGwpXG4gICAgICAuZmFpbHMoXCJPd25lciBjYW4ndCBkZWxldGUuXCIpXG4gICAgO1xuICB9KTtcblxuICB0ZXN0KFwiRGVsZXRlXCIsIChydWxlcykgPT4ge1xuICAgIHJ1bGVzXG4gICAgICAuYXQoJy9kb2NzLycgKyB1aWQoJ21pa2UnKSArICcvZGVsZXRlJylcbiAgICAgIC5hcygnYWRtaW4nKVxuICAgICAgLndyaXRlKCdjcmVhdGVkJylcbiAgICAgIC5zdWNjZWVkcyhcIkFkbWluIGNhbiBjcmVhdGUuXCIpXG5cbiAgICAgIC5hcygnYW5vbicpXG5cbiAgICAgIC53cml0ZSgndXBkYXRlZCcpXG4gICAgICAuZmFpbHMoXCJBbnlvbmUgY2FuJ3QgdXBkYXRlLlwiKVxuXG4gICAgICAud3JpdGUobnVsbClcbiAgICAgIC5zdWNjZWVkcyhcIkFueW9uZSBjYW4gZGVsZXRlLlwiKVxuXG4gICAgICAuYXMoJ21pa2UnKVxuICAgICAgLndyaXRlKCdvd25lci1jcmVhdGVkJylcbiAgICAgIC5mYWlscyhcIk93bmVyIGNhbid0IGNyZWF0ZS5cIilcblxuICAgICAgLmFzKCdhZG1pbicpXG4gICAgICAud3JpdGUoJ2NyZWF0ZWQnKVxuXG4gICAgICAuYXMoJ21pa2UnKVxuXG4gICAgICAud3JpdGUoJ293bmVyLXVwZGF0ZWQnKVxuICAgICAgLmZhaWxzKFwiT3duZXIgY2FuJ3QgdXBkYXRlLlwiKVxuXG4gICAgICAud3JpdGUobnVsbClcbiAgICAgIC5zdWNjZWVkcyhcIk93bmVyIGNhbiBkZWxldGUuXCIpXG4gICAgO1xuICB9KTtcblxuICB0ZXN0KFwiT3duZXIgQ3JlYXRlIGFuZCBEZWxldGVcIiwgKHJ1bGVzKSA9PiB7XG4gICAgcnVsZXNcbiAgICAgIC5hdCgnL2RvY3MvJyArIHVpZCgnbWlrZScpICsgJy9vd25lci1jcmVhdGUtZGVsZXRlJylcbiAgICAgIC5hcygnYW5vbicpXG4gICAgICAud3JpdGUoJ2NyZWF0ZWQnKVxuICAgICAgLmZhaWxzKFwiQW55b25lIGNhbid0IGNyZWF0ZS5cIilcblxuICAgICAgLmFzKCdtaWtlJylcbiAgICAgIC53cml0ZSgnY3JlYXRlZCcpXG4gICAgICAuc3VjY2VlZHMoXCJPd25lciBjYW4gY3JlYXRlLlwiKVxuXG4gICAgICAuYXMoJ2Fub24nKVxuXG4gICAgICAud3JpdGUoJ3VwZGF0ZWQnKVxuICAgICAgLnN1Y2NlZWRzKFwiQW55b25lIGNhbiB1cGRhdGUuXCIpXG5cbiAgICAgIC53cml0ZShudWxsKVxuICAgICAgLmZhaWxzKFwiQW55b25lIGNhbid0IGRlbGV0ZS5cIilcblxuICAgICAgLmFzKCdtaWtlJylcbiAgICAgIC53cml0ZShudWxsKVxuICAgICAgLnN1Y2NlZWRzKFwiT3duZXIgY2FuIGRlbGV0ZS5cIilcbiAgICA7XG4gIH0pO1xufSk7XG4iXX0=
